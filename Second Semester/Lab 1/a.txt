 What happens is that a dialog box asks for the file to be selected. 
 The selected files are put into a buffer that is located at ISampleDlg.m_ofn.lpstrFile. 
 When multiple files are selected, the buffer has the absolute path (null terminated), followed by each of the file names (null terminated). I pull those out and pass the entire absolute filename to the reduce file function. That does check for a null pointer, and proceeds to call fscanf. I have verified that fp is not a null pointer by the time the code gets to fscanf. As I said earlier, it works just fine if I call reduceFile with a relative path, but not an absolute path .It seems that the file names are separated by null character only in case of new Explorer-style dialog, when OFN_EXPLORER flag is specified in the constructor of CFileDialog. Therefore try to add this flag.But CFileDialog class already has functions for getting paths.Viorel, I have looked at the buffer and can tell that each string in there is null terminated, but I will still use your suggestion because it is a little more elegant. However, I have passed it a literal string that I made up  and it still has the same issue with the literal path. When I did that, I essentially bypassed the dialog box just to make sure that wasn't the issue.